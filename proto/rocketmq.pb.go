// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/rocketmq.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建生产者请求
type CreateProducerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Endpoint        string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	AccessKeySecret string                 `protobuf:"bytes,3,opt,name=access_key_secret,json=accessKeySecret,proto3" json:"access_key_secret,omitempty"`
	InstanceId      string                 `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Topic           string                 `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateProducerRequest) Reset() {
	*x = CreateProducerRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProducerRequest) ProtoMessage() {}

func (x *CreateProducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProducerRequest.ProtoReflect.Descriptor instead.
func (*CreateProducerRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{0}
}

func (x *CreateProducerRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateProducerRequest) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *CreateProducerRequest) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *CreateProducerRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateProducerRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// 创建生产者响应
type CreateProducerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ProducerId    string                 `protobuf:"bytes,3,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProducerResponse) Reset() {
	*x = CreateProducerResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProducerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProducerResponse) ProtoMessage() {}

func (x *CreateProducerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProducerResponse.ProtoReflect.Descriptor instead.
func (*CreateProducerResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProducerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateProducerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateProducerResponse) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

// 消息属性
type MessageProperties struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Properties             map[string]string      `protobuf:"bytes,1,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义属性
	MessageKey             string                 `protobuf:"bytes,2,opt,name=message_key,json=messageKey,proto3" json:"message_key,omitempty"`                                                         // 消息Key
	ShardingKey            string                 `protobuf:"bytes,3,opt,name=sharding_key,json=shardingKey,proto3" json:"sharding_key,omitempty"`                                                      // 分区键(顺序消息)
	StartDeliverTime       int64                  `protobuf:"varint,4,opt,name=start_deliver_time,json=startDeliverTime,proto3" json:"start_deliver_time,omitempty"`                                    // 延时投递时间(毫秒时间戳)
	TransCheckImmunityTime int32                  `protobuf:"varint,5,opt,name=trans_check_immunity_time,json=transCheckImmunityTime,proto3" json:"trans_check_immunity_time,omitempty"`                // 事务消息回查免疫时间(秒)
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *MessageProperties) Reset() {
	*x = MessageProperties{}
	mi := &file_proto_rocketmq_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageProperties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageProperties) ProtoMessage() {}

func (x *MessageProperties) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageProperties.ProtoReflect.Descriptor instead.
func (*MessageProperties) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{2}
}

func (x *MessageProperties) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *MessageProperties) GetMessageKey() string {
	if x != nil {
		return x.MessageKey
	}
	return ""
}

func (x *MessageProperties) GetShardingKey() string {
	if x != nil {
		return x.ShardingKey
	}
	return ""
}

func (x *MessageProperties) GetStartDeliverTime() int64 {
	if x != nil {
		return x.StartDeliverTime
	}
	return 0
}

func (x *MessageProperties) GetTransCheckImmunityTime() int32 {
	if x != nil {
		return x.TransCheckImmunityTime
	}
	return 0
}

// 发送消息请求
type SendMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProducerId    string                 `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	MessageBody   string                 `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"` // JSON字符串或普通字符串
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Properties    *MessageProperties     `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{3}
}

func (x *SendMessageRequest) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *SendMessageRequest) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *SendMessageRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SendMessageRequest) GetProperties() *MessageProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// 发送消息响应
type SendMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ReceiptHandle string                 `protobuf:"bytes,4,opt,name=receipt_handle,json=receiptHandle,proto3" json:"receipt_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{4}
}

func (x *SendMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendMessageResponse) GetReceiptHandle() string {
	if x != nil {
		return x.ReceiptHandle
	}
	return ""
}

// 创建消费者请求
type CreateConsumerRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Endpoint        string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKeyId     string                 `protobuf:"bytes,2,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	AccessKeySecret string                 `protobuf:"bytes,3,opt,name=access_key_secret,json=accessKeySecret,proto3" json:"access_key_secret,omitempty"`
	InstanceId      string                 `protobuf:"bytes,4,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	Topic           string                 `protobuf:"bytes,5,opt,name=topic,proto3" json:"topic,omitempty"`
	GroupId         string                 `protobuf:"bytes,6,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	TagExpression   string                 `protobuf:"bytes,7,opt,name=tag_expression,json=tagExpression,proto3" json:"tag_expression,omitempty"` // 如: "tag1||tag2"
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateConsumerRequest) Reset() {
	*x = CreateConsumerRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsumerRequest) ProtoMessage() {}

func (x *CreateConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsumerRequest.ProtoReflect.Descriptor instead.
func (*CreateConsumerRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{5}
}

func (x *CreateConsumerRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *CreateConsumerRequest) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *CreateConsumerRequest) GetAccessKeySecret() string {
	if x != nil {
		return x.AccessKeySecret
	}
	return ""
}

func (x *CreateConsumerRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *CreateConsumerRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CreateConsumerRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CreateConsumerRequest) GetTagExpression() string {
	if x != nil {
		return x.TagExpression
	}
	return ""
}

// 创建消费者响应
type CreateConsumerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ConsumerId    string                 `protobuf:"bytes,3,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConsumerResponse) Reset() {
	*x = CreateConsumerResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConsumerResponse) ProtoMessage() {}

func (x *CreateConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConsumerResponse.ProtoReflect.Descriptor instead.
func (*CreateConsumerResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{6}
}

func (x *CreateConsumerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateConsumerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateConsumerResponse) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

// 接收消息请求
type ReceiveMessagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveMessagesRequest) Reset() {
	*x = ReceiveMessagesRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveMessagesRequest) ProtoMessage() {}

func (x *ReceiveMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveMessagesRequest.ProtoReflect.Descriptor instead.
func (*ReceiveMessagesRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveMessagesRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

// 消息
type Message struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MessageId      string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ReceiptHandle  string                 `protobuf:"bytes,2,opt,name=receipt_handle,json=receiptHandle,proto3" json:"receipt_handle,omitempty"`
	MessageBody    string                 `protobuf:"bytes,3,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	Tag            string                 `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	Properties     map[string]string      `protobuf:"bytes,5,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	BornTimestamp  int64                  `protobuf:"varint,6,opt,name=born_timestamp,json=bornTimestamp,proto3" json:"born_timestamp,omitempty"`
	ReconsumeTimes int32                  `protobuf:"varint,7,opt,name=reconsume_times,json=reconsumeTimes,proto3" json:"reconsume_times,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_proto_rocketmq_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{8}
}

func (x *Message) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *Message) GetReceiptHandle() string {
	if x != nil {
		return x.ReceiptHandle
	}
	return ""
}

func (x *Message) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *Message) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Message) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Message) GetBornTimestamp() int64 {
	if x != nil {
		return x.BornTimestamp
	}
	return 0
}

func (x *Message) GetReconsumeTimes() int32 {
	if x != nil {
		return x.ReconsumeTimes
	}
	return 0
}

// 确认消息请求
type AckMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"`
	ReceiptHandle string                 `protobuf:"bytes,2,opt,name=receipt_handle,json=receiptHandle,proto3" json:"receipt_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageRequest) Reset() {
	*x = AckMessageRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageRequest) ProtoMessage() {}

func (x *AckMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageRequest.ProtoReflect.Descriptor instead.
func (*AckMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{9}
}

func (x *AckMessageRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *AckMessageRequest) GetReceiptHandle() string {
	if x != nil {
		return x.ReceiptHandle
	}
	return ""
}

// 确认消息响应
type AckMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckMessageResponse) Reset() {
	*x = AckMessageResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckMessageResponse) ProtoMessage() {}

func (x *AckMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckMessageResponse.ProtoReflect.Descriptor instead.
func (*AckMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{10}
}

func (x *AckMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AckMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 清理生产者请求
type CleanupProducerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProducerId    string                 `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"` // 生产者ID
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`                             // 或者通过主题清理
	Endpoint      string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                       // 配合主题使用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupProducerRequest) Reset() {
	*x = CleanupProducerRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupProducerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupProducerRequest) ProtoMessage() {}

func (x *CleanupProducerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupProducerRequest.ProtoReflect.Descriptor instead.
func (*CleanupProducerRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{11}
}

func (x *CleanupProducerRequest) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *CleanupProducerRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *CleanupProducerRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

// 清理生产者响应
type CleanupProducerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CleanedCount  int32                  `protobuf:"varint,3,opt,name=cleaned_count,json=cleanedCount,proto3" json:"cleaned_count,omitempty"` // 清理的生产者数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupProducerResponse) Reset() {
	*x = CleanupProducerResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupProducerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupProducerResponse) ProtoMessage() {}

func (x *CleanupProducerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupProducerResponse.ProtoReflect.Descriptor instead.
func (*CleanupProducerResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{12}
}

func (x *CleanupProducerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CleanupProducerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CleanupProducerResponse) GetCleanedCount() int32 {
	if x != nil {
		return x.CleanedCount
	}
	return 0
}

// 清理消费者请求
type CleanupConsumerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConsumerId    string                 `protobuf:"bytes,1,opt,name=consumer_id,json=consumerId,proto3" json:"consumer_id,omitempty"` // 消费者ID
	GroupId       string                 `protobuf:"bytes,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`          // 或者通过组名清理
	Topic         string                 `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`                             // 配合组名使用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupConsumerRequest) Reset() {
	*x = CleanupConsumerRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupConsumerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupConsumerRequest) ProtoMessage() {}

func (x *CleanupConsumerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupConsumerRequest.ProtoReflect.Descriptor instead.
func (*CleanupConsumerRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{13}
}

func (x *CleanupConsumerRequest) GetConsumerId() string {
	if x != nil {
		return x.ConsumerId
	}
	return ""
}

func (x *CleanupConsumerRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *CleanupConsumerRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

// 清理消费者响应
type CleanupConsumerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CleanedCount  int32                  `protobuf:"varint,3,opt,name=cleaned_count,json=cleanedCount,proto3" json:"cleaned_count,omitempty"` // 清理的消费者数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanupConsumerResponse) Reset() {
	*x = CleanupConsumerResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanupConsumerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanupConsumerResponse) ProtoMessage() {}

func (x *CleanupConsumerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanupConsumerResponse.ProtoReflect.Descriptor instead.
func (*CleanupConsumerResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{14}
}

func (x *CleanupConsumerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CleanupConsumerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CleanupConsumerResponse) GetCleanedCount() int32 {
	if x != nil {
		return x.CleanedCount
	}
	return 0
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{15}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{16}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 发送顺序消息请求
type SendOrderedMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProducerId    string                 `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	MessageBody   string                 `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	Tag           string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Properties    *MessageProperties     `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	ShardingKey   string                 `protobuf:"bytes,5,opt,name=sharding_key,json=shardingKey,proto3" json:"sharding_key,omitempty"` // 分区键，用于顺序消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendOrderedMessageRequest) Reset() {
	*x = SendOrderedMessageRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendOrderedMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendOrderedMessageRequest) ProtoMessage() {}

func (x *SendOrderedMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendOrderedMessageRequest.ProtoReflect.Descriptor instead.
func (*SendOrderedMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{17}
}

func (x *SendOrderedMessageRequest) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *SendOrderedMessageRequest) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *SendOrderedMessageRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SendOrderedMessageRequest) GetProperties() *MessageProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SendOrderedMessageRequest) GetShardingKey() string {
	if x != nil {
		return x.ShardingKey
	}
	return ""
}

// 发送延迟消息请求
type SendDelayMessageRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ProducerId       string                 `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	MessageBody      string                 `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	Tag              string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Properties       *MessageProperties     `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	DelayTimeLevel   int64                  `protobuf:"varint,5,opt,name=delay_time_level,json=delayTimeLevel,proto3" json:"delay_time_level,omitempty"`       // 延迟等级 1-18
	StartDeliverTime int64                  `protobuf:"varint,6,opt,name=start_deliver_time,json=startDeliverTime,proto3" json:"start_deliver_time,omitempty"` // 延迟投递时间戳（毫秒）
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SendDelayMessageRequest) Reset() {
	*x = SendDelayMessageRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendDelayMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendDelayMessageRequest) ProtoMessage() {}

func (x *SendDelayMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendDelayMessageRequest.ProtoReflect.Descriptor instead.
func (*SendDelayMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{18}
}

func (x *SendDelayMessageRequest) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *SendDelayMessageRequest) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *SendDelayMessageRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SendDelayMessageRequest) GetProperties() *MessageProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SendDelayMessageRequest) GetDelayTimeLevel() int64 {
	if x != nil {
		return x.DelayTimeLevel
	}
	return 0
}

func (x *SendDelayMessageRequest) GetStartDeliverTime() int64 {
	if x != nil {
		return x.StartDeliverTime
	}
	return 0
}

// 发送事务消息请求
type SendTransactionMessageRequest struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	ProducerId             string                 `protobuf:"bytes,1,opt,name=producer_id,json=producerId,proto3" json:"producer_id,omitempty"`
	MessageBody            string                 `protobuf:"bytes,2,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	Tag                    string                 `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Properties             *MessageProperties     `protobuf:"bytes,4,opt,name=properties,proto3" json:"properties,omitempty"`
	TransCheckImmunityTime int32                  `protobuf:"varint,5,opt,name=trans_check_immunity_time,json=transCheckImmunityTime,proto3" json:"trans_check_immunity_time,omitempty"` // 事务回查免疫时间（秒）
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SendTransactionMessageRequest) Reset() {
	*x = SendTransactionMessageRequest{}
	mi := &file_proto_rocketmq_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionMessageRequest) ProtoMessage() {}

func (x *SendTransactionMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionMessageRequest.ProtoReflect.Descriptor instead.
func (*SendTransactionMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{19}
}

func (x *SendTransactionMessageRequest) GetProducerId() string {
	if x != nil {
		return x.ProducerId
	}
	return ""
}

func (x *SendTransactionMessageRequest) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

func (x *SendTransactionMessageRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SendTransactionMessageRequest) GetProperties() *MessageProperties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SendTransactionMessageRequest) GetTransCheckImmunityTime() int32 {
	if x != nil {
		return x.TransCheckImmunityTime
	}
	return 0
}

// 事务消息响应
type SendTransactionMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ReceiptHandle string                 `protobuf:"bytes,4,opt,name=receipt_handle,json=receiptHandle,proto3" json:"receipt_handle,omitempty"`
	TransactionId string                 `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 事务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendTransactionMessageResponse) Reset() {
	*x = SendTransactionMessageResponse{}
	mi := &file_proto_rocketmq_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendTransactionMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTransactionMessageResponse) ProtoMessage() {}

func (x *SendTransactionMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_rocketmq_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTransactionMessageResponse.ProtoReflect.Descriptor instead.
func (*SendTransactionMessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_rocketmq_proto_rawDescGZIP(), []int{20}
}

func (x *SendTransactionMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SendTransactionMessageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendTransactionMessageResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SendTransactionMessageResponse) GetReceiptHandle() string {
	if x != nil {
		return x.ReceiptHandle
	}
	return ""
}

func (x *SendTransactionMessageResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

var File_proto_rocketmq_proto protoreflect.FileDescriptor

const file_proto_rocketmq_proto_rawDesc = "" +
	"\n" +
	"\x14proto/rocketmq.proto\x12\brocketmq\"\xba\x01\n" +
	"\x15CreateProducerRequest\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\"\n" +
	"\raccess_key_id\x18\x02 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11access_key_secret\x18\x03 \x01(\tR\x0faccessKeySecret\x12\x1f\n" +
	"\vinstance_id\x18\x04 \x01(\tR\n" +
	"instanceId\x12\x14\n" +
	"\x05topic\x18\x05 \x01(\tR\x05topic\"m\n" +
	"\x16CreateProducerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vproducer_id\x18\x03 \x01(\tR\n" +
	"producerId\"\xcc\x02\n" +
	"\x11MessageProperties\x12K\n" +
	"\n" +
	"properties\x18\x01 \x03(\v2+.rocketmq.MessageProperties.PropertiesEntryR\n" +
	"properties\x12\x1f\n" +
	"\vmessage_key\x18\x02 \x01(\tR\n" +
	"messageKey\x12!\n" +
	"\fsharding_key\x18\x03 \x01(\tR\vshardingKey\x12,\n" +
	"\x12start_deliver_time\x18\x04 \x01(\x03R\x10startDeliverTime\x129\n" +
	"\x19trans_check_immunity_time\x18\x05 \x01(\x05R\x16transCheckImmunityTime\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa7\x01\n" +
	"\x12SendMessageRequest\x12\x1f\n" +
	"\vproducer_id\x18\x01 \x01(\tR\n" +
	"producerId\x12!\n" +
	"\fmessage_body\x18\x02 \x01(\tR\vmessageBody\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\x12;\n" +
	"\n" +
	"properties\x18\x04 \x01(\v2\x1b.rocketmq.MessagePropertiesR\n" +
	"properties\"\x8f\x01\n" +
	"\x13SendMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\x12%\n" +
	"\x0ereceipt_handle\x18\x04 \x01(\tR\rreceiptHandle\"\xfc\x01\n" +
	"\x15CreateConsumerRequest\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x12\"\n" +
	"\raccess_key_id\x18\x02 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11access_key_secret\x18\x03 \x01(\tR\x0faccessKeySecret\x12\x1f\n" +
	"\vinstance_id\x18\x04 \x01(\tR\n" +
	"instanceId\x12\x14\n" +
	"\x05topic\x18\x05 \x01(\tR\x05topic\x12\x19\n" +
	"\bgroup_id\x18\x06 \x01(\tR\agroupId\x12%\n" +
	"\x0etag_expression\x18\a \x01(\tR\rtagExpression\"m\n" +
	"\x16CreateConsumerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vconsumer_id\x18\x03 \x01(\tR\n" +
	"consumerId\"9\n" +
	"\x16ReceiveMessagesRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\"\xd6\x02\n" +
	"\aMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12%\n" +
	"\x0ereceipt_handle\x18\x02 \x01(\tR\rreceiptHandle\x12!\n" +
	"\fmessage_body\x18\x03 \x01(\tR\vmessageBody\x12\x10\n" +
	"\x03tag\x18\x04 \x01(\tR\x03tag\x12A\n" +
	"\n" +
	"properties\x18\x05 \x03(\v2!.rocketmq.Message.PropertiesEntryR\n" +
	"properties\x12%\n" +
	"\x0eborn_timestamp\x18\x06 \x01(\x03R\rbornTimestamp\x12'\n" +
	"\x0freconsume_times\x18\a \x01(\x05R\x0ereconsumeTimes\x1a=\n" +
	"\x0fPropertiesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"[\n" +
	"\x11AckMessageRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12%\n" +
	"\x0ereceipt_handle\x18\x02 \x01(\tR\rreceiptHandle\"H\n" +
	"\x12AckMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"k\n" +
	"\x16CleanupProducerRequest\x12\x1f\n" +
	"\vproducer_id\x18\x01 \x01(\tR\n" +
	"producerId\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\"r\n" +
	"\x17CleanupProducerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rcleaned_count\x18\x03 \x01(\x05R\fcleanedCount\"j\n" +
	"\x16CleanupConsumerRequest\x12\x1f\n" +
	"\vconsumer_id\x18\x01 \x01(\tR\n" +
	"consumerId\x12\x19\n" +
	"\bgroup_id\x18\x02 \x01(\tR\agroupId\x12\x14\n" +
	"\x05topic\x18\x03 \x01(\tR\x05topic\"r\n" +
	"\x17CleanupConsumerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rcleaned_count\x18\x03 \x01(\x05R\fcleanedCount\"\x14\n" +
	"\x12HealthCheckRequest\"I\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd1\x01\n" +
	"\x19SendOrderedMessageRequest\x12\x1f\n" +
	"\vproducer_id\x18\x01 \x01(\tR\n" +
	"producerId\x12!\n" +
	"\fmessage_body\x18\x02 \x01(\tR\vmessageBody\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\x12;\n" +
	"\n" +
	"properties\x18\x04 \x01(\v2\x1b.rocketmq.MessagePropertiesR\n" +
	"properties\x12!\n" +
	"\fsharding_key\x18\x05 \x01(\tR\vshardingKey\"\x84\x02\n" +
	"\x17SendDelayMessageRequest\x12\x1f\n" +
	"\vproducer_id\x18\x01 \x01(\tR\n" +
	"producerId\x12!\n" +
	"\fmessage_body\x18\x02 \x01(\tR\vmessageBody\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\x12;\n" +
	"\n" +
	"properties\x18\x04 \x01(\v2\x1b.rocketmq.MessagePropertiesR\n" +
	"properties\x12(\n" +
	"\x10delay_time_level\x18\x05 \x01(\x03R\x0edelayTimeLevel\x12,\n" +
	"\x12start_deliver_time\x18\x06 \x01(\x03R\x10startDeliverTime\"\xed\x01\n" +
	"\x1dSendTransactionMessageRequest\x12\x1f\n" +
	"\vproducer_id\x18\x01 \x01(\tR\n" +
	"producerId\x12!\n" +
	"\fmessage_body\x18\x02 \x01(\tR\vmessageBody\x12\x10\n" +
	"\x03tag\x18\x03 \x01(\tR\x03tag\x12;\n" +
	"\n" +
	"properties\x18\x04 \x01(\v2\x1b.rocketmq.MessagePropertiesR\n" +
	"properties\x129\n" +
	"\x19trans_check_immunity_time\x18\x05 \x01(\x05R\x16transCheckImmunityTime\"\xc1\x01\n" +
	"\x1eSendTransactionMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\x12%\n" +
	"\x0ereceipt_handle\x18\x04 \x01(\tR\rreceiptHandle\x12%\n" +
	"\x0etransaction_id\x18\x05 \x01(\tR\rtransactionId2\xb1\a\n" +
	"\rRocketMQProxy\x12S\n" +
	"\x0eCreateProducer\x12\x1f.rocketmq.CreateProducerRequest\x1a .rocketmq.CreateProducerResponse\x12J\n" +
	"\vSendMessage\x12\x1c.rocketmq.SendMessageRequest\x1a\x1d.rocketmq.SendMessageResponse\x12X\n" +
	"\x12SendOrderedMessage\x12#.rocketmq.SendOrderedMessageRequest\x1a\x1d.rocketmq.SendMessageResponse\x12T\n" +
	"\x10SendDelayMessage\x12!.rocketmq.SendDelayMessageRequest\x1a\x1d.rocketmq.SendMessageResponse\x12k\n" +
	"\x16SendTransactionMessage\x12'.rocketmq.SendTransactionMessageRequest\x1a(.rocketmq.SendTransactionMessageResponse\x12S\n" +
	"\x0eCreateConsumer\x12\x1f.rocketmq.CreateConsumerRequest\x1a .rocketmq.CreateConsumerResponse\x12H\n" +
	"\x0fReceiveMessages\x12 .rocketmq.ReceiveMessagesRequest\x1a\x11.rocketmq.Message0\x01\x12G\n" +
	"\n" +
	"AckMessage\x12\x1b.rocketmq.AckMessageRequest\x1a\x1c.rocketmq.AckMessageResponse\x12V\n" +
	"\x0fCleanupProducer\x12 .rocketmq.CleanupProducerRequest\x1a!.rocketmq.CleanupProducerResponse\x12V\n" +
	"\x0fCleanupConsumer\x12 .rocketmq.CleanupConsumerRequest\x1a!.rocketmq.CleanupConsumerResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.rocketmq.HealthCheckRequest\x1a\x1d.rocketmq.HealthCheckResponseB\tZ\a./protob\x06proto3"

var (
	file_proto_rocketmq_proto_rawDescOnce sync.Once
	file_proto_rocketmq_proto_rawDescData []byte
)

func file_proto_rocketmq_proto_rawDescGZIP() []byte {
	file_proto_rocketmq_proto_rawDescOnce.Do(func() {
		file_proto_rocketmq_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_rocketmq_proto_rawDesc), len(file_proto_rocketmq_proto_rawDesc)))
	})
	return file_proto_rocketmq_proto_rawDescData
}

var file_proto_rocketmq_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_rocketmq_proto_goTypes = []any{
	(*CreateProducerRequest)(nil),          // 0: rocketmq.CreateProducerRequest
	(*CreateProducerResponse)(nil),         // 1: rocketmq.CreateProducerResponse
	(*MessageProperties)(nil),              // 2: rocketmq.MessageProperties
	(*SendMessageRequest)(nil),             // 3: rocketmq.SendMessageRequest
	(*SendMessageResponse)(nil),            // 4: rocketmq.SendMessageResponse
	(*CreateConsumerRequest)(nil),          // 5: rocketmq.CreateConsumerRequest
	(*CreateConsumerResponse)(nil),         // 6: rocketmq.CreateConsumerResponse
	(*ReceiveMessagesRequest)(nil),         // 7: rocketmq.ReceiveMessagesRequest
	(*Message)(nil),                        // 8: rocketmq.Message
	(*AckMessageRequest)(nil),              // 9: rocketmq.AckMessageRequest
	(*AckMessageResponse)(nil),             // 10: rocketmq.AckMessageResponse
	(*CleanupProducerRequest)(nil),         // 11: rocketmq.CleanupProducerRequest
	(*CleanupProducerResponse)(nil),        // 12: rocketmq.CleanupProducerResponse
	(*CleanupConsumerRequest)(nil),         // 13: rocketmq.CleanupConsumerRequest
	(*CleanupConsumerResponse)(nil),        // 14: rocketmq.CleanupConsumerResponse
	(*HealthCheckRequest)(nil),             // 15: rocketmq.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 16: rocketmq.HealthCheckResponse
	(*SendOrderedMessageRequest)(nil),      // 17: rocketmq.SendOrderedMessageRequest
	(*SendDelayMessageRequest)(nil),        // 18: rocketmq.SendDelayMessageRequest
	(*SendTransactionMessageRequest)(nil),  // 19: rocketmq.SendTransactionMessageRequest
	(*SendTransactionMessageResponse)(nil), // 20: rocketmq.SendTransactionMessageResponse
	nil,                                    // 21: rocketmq.MessageProperties.PropertiesEntry
	nil,                                    // 22: rocketmq.Message.PropertiesEntry
}
var file_proto_rocketmq_proto_depIdxs = []int32{
	21, // 0: rocketmq.MessageProperties.properties:type_name -> rocketmq.MessageProperties.PropertiesEntry
	2,  // 1: rocketmq.SendMessageRequest.properties:type_name -> rocketmq.MessageProperties
	22, // 2: rocketmq.Message.properties:type_name -> rocketmq.Message.PropertiesEntry
	2,  // 3: rocketmq.SendOrderedMessageRequest.properties:type_name -> rocketmq.MessageProperties
	2,  // 4: rocketmq.SendDelayMessageRequest.properties:type_name -> rocketmq.MessageProperties
	2,  // 5: rocketmq.SendTransactionMessageRequest.properties:type_name -> rocketmq.MessageProperties
	0,  // 6: rocketmq.RocketMQProxy.CreateProducer:input_type -> rocketmq.CreateProducerRequest
	3,  // 7: rocketmq.RocketMQProxy.SendMessage:input_type -> rocketmq.SendMessageRequest
	17, // 8: rocketmq.RocketMQProxy.SendOrderedMessage:input_type -> rocketmq.SendOrderedMessageRequest
	18, // 9: rocketmq.RocketMQProxy.SendDelayMessage:input_type -> rocketmq.SendDelayMessageRequest
	19, // 10: rocketmq.RocketMQProxy.SendTransactionMessage:input_type -> rocketmq.SendTransactionMessageRequest
	5,  // 11: rocketmq.RocketMQProxy.CreateConsumer:input_type -> rocketmq.CreateConsumerRequest
	7,  // 12: rocketmq.RocketMQProxy.ReceiveMessages:input_type -> rocketmq.ReceiveMessagesRequest
	9,  // 13: rocketmq.RocketMQProxy.AckMessage:input_type -> rocketmq.AckMessageRequest
	11, // 14: rocketmq.RocketMQProxy.CleanupProducer:input_type -> rocketmq.CleanupProducerRequest
	13, // 15: rocketmq.RocketMQProxy.CleanupConsumer:input_type -> rocketmq.CleanupConsumerRequest
	15, // 16: rocketmq.RocketMQProxy.HealthCheck:input_type -> rocketmq.HealthCheckRequest
	1,  // 17: rocketmq.RocketMQProxy.CreateProducer:output_type -> rocketmq.CreateProducerResponse
	4,  // 18: rocketmq.RocketMQProxy.SendMessage:output_type -> rocketmq.SendMessageResponse
	4,  // 19: rocketmq.RocketMQProxy.SendOrderedMessage:output_type -> rocketmq.SendMessageResponse
	4,  // 20: rocketmq.RocketMQProxy.SendDelayMessage:output_type -> rocketmq.SendMessageResponse
	20, // 21: rocketmq.RocketMQProxy.SendTransactionMessage:output_type -> rocketmq.SendTransactionMessageResponse
	6,  // 22: rocketmq.RocketMQProxy.CreateConsumer:output_type -> rocketmq.CreateConsumerResponse
	8,  // 23: rocketmq.RocketMQProxy.ReceiveMessages:output_type -> rocketmq.Message
	10, // 24: rocketmq.RocketMQProxy.AckMessage:output_type -> rocketmq.AckMessageResponse
	12, // 25: rocketmq.RocketMQProxy.CleanupProducer:output_type -> rocketmq.CleanupProducerResponse
	14, // 26: rocketmq.RocketMQProxy.CleanupConsumer:output_type -> rocketmq.CleanupConsumerResponse
	16, // 27: rocketmq.RocketMQProxy.HealthCheck:output_type -> rocketmq.HealthCheckResponse
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_rocketmq_proto_init() }
func file_proto_rocketmq_proto_init() {
	if File_proto_rocketmq_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_rocketmq_proto_rawDesc), len(file_proto_rocketmq_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_rocketmq_proto_goTypes,
		DependencyIndexes: file_proto_rocketmq_proto_depIdxs,
		MessageInfos:      file_proto_rocketmq_proto_msgTypes,
	}.Build()
	File_proto_rocketmq_proto = out.File
	file_proto_rocketmq_proto_goTypes = nil
	file_proto_rocketmq_proto_depIdxs = nil
}
